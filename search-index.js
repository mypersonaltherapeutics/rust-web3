var searchIndex = {};
searchIndex["web3"] = {"doc":"Ethereum JSON-RPC client (Web3).","items":[[0,"helpers","web3","Web3 helpers.",null,null],[3,"CallResult","web3::helpers","Value-decoder future. Takes any type which is deserializable from rpc::Value, a future which yields that type, and",null,null],[5,"serialize","","Serialize a type. Panics if the type is returns error during serialization.",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"to_string","","Serializes a request to string. Panics if the type returns error during serialization.",null,{"inputs":[{"name":"t"}],"output":{"name":"string"}}],[5,"build_request","","Build a JSON-RPC request.",null,{"inputs":[{"name":"usize"},{"name":"str"},{"generics":["value"],"name":"vec"}],"output":{"name":"call"}}],[5,"to_response_from_slice","","Parse bytes slice into JSON-RPC response.",null,null],[5,"to_results_from_outputs","","Parse a Vec of `rpc::Output` into `Result`.",null,{"inputs":[{"generics":["output"],"name":"vec"}],"output":{"generics":["vec","error"],"name":"result"}}],[5,"to_result_from_output","","Parse `rpc::Output` into `Result`.",null,{"inputs":[{"name":"output"}],"output":{"generics":["value","error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new CallResult wrapping the inner future.",0,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"poll","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[0,"api","web3","`Web3` implementation",null,null],[3,"Eth","web3::api","`Eth` namespace",null,null],[3,"BaseFilter","","Base filter handle. Uninstall filter on drop. Allows to poll the filter.",null,null],[3,"CreateFilter","","Future which resolves with new filter",null,null],[3,"EthFilter","","`Eth` namespace, filters",null,null],[3,"FilterStream","","Stream of events",null,null],[3,"Net","","`Net` namespace",null,null],[3,"Personal","","`Personal` namespace",null,null],[3,"Web3Api","","`Web3` namespace",null,null],[3,"Web3","","`Web3` wrapper for all namespaces",null,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"eth"}}],[11,"new","","",1,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"accounts","","Get list of available accounts.",1,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"callresult"}}],[11,"block_number","","Get current block number",1,{"inputs":[{"name":"self"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"call","","Call a constant method of contract without changing the state of the blockchain.",1,{"inputs":[{"name":"self"},{"name":"callrequest"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["bytes"],"name":"callresult"}}],[11,"coinbase","","Get coinbase address",1,{"inputs":[{"name":"self"}],"output":{"generics":["address"],"name":"callresult"}}],[11,"compile_lll","","Compile LLL",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["bytes"],"name":"callresult"}}],[11,"compile_solidity","","Compile Solidity",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["bytes"],"name":"callresult"}}],[11,"compile_serpent","","Compile Serpent",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"generics":["bytes"],"name":"callresult"}}],[11,"estimate_gas","","Call a contract without changing the state of the blockchain to estimate gas usage.",1,{"inputs":[{"name":"self"},{"name":"callrequest"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"gas_price","","Get current recommended gas price",1,{"inputs":[{"name":"self"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"balance","","Get balance of given address",1,{"inputs":[{"name":"self"},{"name":"address"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"block","","Get block details with transaction hashes.",1,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"generics":["block"],"name":"callresult"}}],[11,"block_with_txs","","Get block details with full transaction objects.",1,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"generics":["block"],"name":"callresult"}}],[11,"block_transaction_count","","Get number of transactions in block",1,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"code","","Get code under given address",1,{"inputs":[{"name":"self"},{"name":"address"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["bytes"],"name":"callresult"}}],[11,"compilers","","Get supported compilers",1,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"callresult"}}],[11,"storage","","Get storage entry",1,{"inputs":[{"name":"self"},{"name":"address"},{"name":"u256"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["h256"],"name":"callresult"}}],[11,"transaction_count","","Get nonce",1,{"inputs":[{"name":"self"},{"name":"address"},{"generics":["blocknumber"],"name":"option"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"transaction","","Get transaction",1,{"inputs":[{"name":"self"},{"name":"transactionid"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"transaction_receipt","","Get transaction receipt",1,{"inputs":[{"name":"self"},{"name":"h256"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"uncle","","Get uncle by block ID and uncle index -- transactions only has hashes.",1,{"inputs":[{"name":"self"},{"name":"blockid"},{"name":"index"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"uncle_count","","Get uncle count in block",1,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"work","","Get work package",1,{"inputs":[{"name":"self"}],"output":{"generics":["work"],"name":"callresult"}}],[11,"hashrate","","Get hash rate",1,{"inputs":[{"name":"self"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"mining","","Get mining status",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"new_block_filter","","Start new block filter",1,{"inputs":[{"name":"self"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"new_pending_transaction_filter","","Start new pending transaction filter",1,{"inputs":[{"name":"self"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"protocol_version","","Start new pending transaction filter",1,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"callresult"}}],[11,"send_raw_transaction","","Sends a rlp-encoded signed transaction",1,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"generics":["h256"],"name":"callresult"}}],[11,"send_transaction","","Sends a transaction transaction",1,{"inputs":[{"name":"self"},{"name":"transactionrequest"}],"output":{"generics":["h256"],"name":"callresult"}}],[11,"sign","","Signs a hash of given data",1,{"inputs":[{"name":"self"},{"name":"address"},{"name":"bytes"}],"output":{"generics":["h520"],"name":"callresult"}}],[11,"submit_hashrate","","Submit hashrate of external miner",1,{"inputs":[{"name":"self"},{"name":"u256"},{"name":"h256"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"submit_work","","Submit work of external miner",1,{"inputs":[{"name":"self"},{"name":"h64"},{"name":"h256"},{"name":"h256"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"syncing","","Get syncing status",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"transport","","Borrow a transport from this filter.",2,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","Polls this filter for changes. Will return logs that happened after previous poll.",3,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"callresult"}}],[11,"stream","","Returns the stream of items which automatically polls the server",3,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"filterstream"}}],[11,"uninstall","","Uninstalls the filter",3,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"transport","","Borrows the transport.",3,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"logs","","Returns future with all logs matching given filter",3,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"callresult"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"ethfilter"}}],[11,"new","","",5,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","",5,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"create_logs_filter","","Installs a new logs filter.",5,{"inputs":[{"name":"self"},{"name":"filter"}],"output":{"generics":["log"],"name":"createfilter"}}],[11,"create_blocks_filter","","Installs a new block filter.",5,{"inputs":[{"name":"self"}],"output":{"generics":["h256"],"name":"createfilter"}}],[11,"create_pending_transactions_filter","","Installs a new pending transactions filter.",5,{"inputs":[{"name":"self"}],"output":{"generics":["h256"],"name":"createfilter"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"net"}}],[11,"new","","",6,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","",6,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"version","","Returns protocol version",6,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"callresult"}}],[11,"peer_count","","Returns number of peers connected to node.",6,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"callresult"}}],[11,"is_listening","","Whether the node is listening for network connections",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"personal"}}],[11,"new","","",7,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","",7,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"list_accounts","","Returns a list of available accounts.",7,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"callresult"}}],[11,"new_account","","Creates a new account and protects it with given password. Returns the address of created account.",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["address"],"name":"callresult"}}],[11,"unlock_account","","Unlocks the account with given password for some period of time (or single transaction). Returns `true` if the call was successful.",7,{"inputs":[{"name":"self"},{"name":"address"},{"name":"str"},{"generics":["u16"],"name":"option"}],"output":{"generics":["bool"],"name":"callresult"}}],[11,"send_transaction","","Sends a transaction from locked account. Returns transaction hash.",7,{"inputs":[{"name":"self"},{"name":"transactionrequest"},{"name":"str"}],"output":{"generics":["h256"],"name":"callresult"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"web3"}}],[11,"new","","",8,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","",8,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"client_version","","Returns client version",8,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"callresult"}}],[11,"sha3","","Returns sha3 of the given data",8,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"generics":["h256"],"name":"callresult"}}],[8,"Namespace","","Common API for all namespaces",null,null],[10,"new","","Creates new API namespace",9,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"transport","","Borrows a transport.",9,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"web3"}}],[11,"new","","Create new `Web3` with given transport",10,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"transport","","Borrows a transport.",10,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"api","","Access methods from custom namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"a"}}],[11,"eth","","Access methods from `eth` namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"eth"}}],[11,"net","","Access methods from `net` namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"net"}}],[11,"web3","","Access methods from `web3` namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"web3"}}],[11,"eth_filter","","Access filter methods from `eth` namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"ethfilter"}}],[11,"personal","","Access methods from `personal` namespace",10,{"inputs":[{"name":"self"}],"output":{"name":"personal"}}],[11,"wait_for_confirmations","","Should be used to wait for confirmations",10,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"usize"},{"name":"v"}],"output":{"name":"confirmations"}}],[11,"send_transaction_with_confirmation","","Sends transaction and returns future resolved after transaction is confirmed",10,{"inputs":[{"name":"self"},{"name":"transactionrequest"},{"name":"duration"},{"name":"usize"}],"output":{"name":"sendtransactionwithconfirmation"}}],[11,"send_raw_transaction_with_confirmation","","Sends raw transaction and returns future resolved after transaction is confirmed",10,{"inputs":[{"name":"self"},{"name":"bytes"},{"name":"duration"},{"name":"usize"}],"output":{"name":"sendtransactionwithconfirmation"}}],[0,"contract","web3","Ethereum Contract Interface",null,null],[3,"QueryResult","web3::contract","Function-specific bytes-decoder future. Takes any type which is deserializable from `Vec<ethabi::Token>`, a function definition and a future which yields that type.",null,null],[3,"CallResult","","A standard function (RPC) call result. Takes any type which is deserializable from JSON, a function definition and a future which yields that type.",null,null],[3,"Error","","The Error type.",null,null],[12,"0","","The kind of the error.",11,null],[3,"Options","","Contract Call/Query Options",null,null],[12,"gas","","Fixed gas limit",12,null],[12,"gas_price","","Fixed gas price",12,null],[12,"value","","Value to transfer",12,null],[12,"nonce","","Fixed transaction nonce",12,null],[12,"condition","","A conditon to satisfy before including transaction.",12,null],[3,"Contract","","Ethereum Contract Interface",null,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",13,null],[13,"Abi","","",13,null],[13,"Api","","",13,null],[13,"InvalidOutputType","","",13,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",11,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",11,null],[11,"with_chain","","",11,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",11,null],[11,"iter","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",11,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",11,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",11,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",11,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",11,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",11,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",11,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",11,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",11,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",11,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",11,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",13,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",13,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",14,{"inputs":[{"name":"callresult"}],"output":{"name":"self"}}],[11,"from","","",14,{"inputs":[{"name":"e"}],"output":{"name":"self"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",15,{"inputs":[{"name":"e"}],"output":{"name":"self"}}],[11,"new","","Create a new `QueryResult` wrapping the inner future.",15,{"inputs":[{"generics":["bytes"],"name":"callresult"},{"name":"function"}],"output":{"name":"self"}}],[11,"poll","","",15,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",14,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"deploy","","Contract deployment utilities",null,null],[3,"Error","web3::contract::deploy","The Error type.",null,null],[12,"0","","The kind of the error.",16,null],[3,"Builder","","A configuration builder for contract deployment.",null,null],[3,"PendingContract","","Contract being deployed.",null,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",17,null],[13,"Api","","",17,null],[13,"ContractDeploymentFailure","","",17,null],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"confirmations","","Number of confirmations required after code deployment.",18,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"options","","Deployment transaction options.",18,{"inputs":[{"name":"self"},{"name":"options"}],"output":{"name":"self"}}],[11,"poll_interval","","Confirmations poll interval.",18,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"self"}}],[11,"execute","","Execute deployment passing code and contructor parameters.",18,{"inputs":[{"name":"self"},{"name":"v"},{"name":"p"},{"name":"address"}],"output":{"generics":["pendingcontract","error"],"name":"result"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"tokens","web3::contract","Contract Functions Output types.",null,null],[8,"Detokenize","web3::contract::tokens","Output type possible to deserialize from Contract ABI",null,null],[10,"from_tokens","","Creates a new instance from parsed ABI tokens.",20,{"inputs":[{"generics":["token"],"name":"vec"}],"output":{"generics":["error"],"name":"result"}}],[8,"Tokenize","","Tokens conversion trait",null,null],[10,"into_tokens","","Convert to list of tokens",21,{"inputs":[{"name":"self"}],"output":{"generics":["token"],"name":"vec"}}],[8,"Tokenizable","","Simplified output type for single value.",null,null],[10,"from_token","","Converts a `Token` into expected type.",22,{"inputs":[{"name":"token"}],"output":{"generics":["error"],"name":"result"}}],[10,"into_token","","Converts a specified type back into token.",22,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"default","web3::contract","",12,{"inputs":[],"output":{"name":"options"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"options"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"options"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"options"}],"output":{"name":"bool"}}],[11,"with","","Create new default `Options` object with some modifications.",12,{"inputs":[{"name":"f"}],"output":{"name":"options"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deploy","","Creates deployment builder for a contract given it's ABI in JSON.",23,null],[11,"new","","Creates new Contract Interface given blockchain address and ABI",23,{"inputs":[{"name":"eth"},{"name":"address"},{"name":"contract"}],"output":{"name":"self"}}],[11,"from_json","","Creates new Contract Interface given blockchain address and JSON containing ABI",23,null],[11,"address","","Returns contract address",23,{"inputs":[{"name":"self"}],"output":{"name":"address"}}],[11,"call","","Execute a contract function",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"address"},{"name":"options"}],"output":{"generics":["h256"],"name":"callresult"}}],[11,"estimate_gas","","Estimate gas required for this function call.",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"address"},{"name":"options"}],"output":{"generics":["u256"],"name":"callresult"}}],[11,"query","","Call constant function",23,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"a"},{"name":"options"},{"name":"b"}],"output":{"name":"queryresult"}}],[0,"error","web3","Web3 Error",null,null],[3,"Error","web3::error","The Error type.",null,null],[12,"0","","The kind of the error.",24,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",25,null],[13,"Io","","",25,null],[13,"Unreachable","","",25,null],[13,"Decoder","","",25,null],[13,"InvalidResponse","","",25,null],[13,"Transport","","",25,null],[13,"Rpc","","",25,null],[13,"Internal","","",25,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with this crate.",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the closure, which returns some type that can be converted to `ErrorKind`, boxes the original error to store as the cause, then returns a new error containing the original error.",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",24,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",24,null],[11,"with_chain","","",24,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",24,null],[11,"iter","","",24,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",24,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",24,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",24,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",24,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",24,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",24,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",24,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",24,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",24,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",24,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",24,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",24,null],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",25,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",25,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",25,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",24,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[0,"transports","web3","Supported Ethereum JSON-RPC transports.",null,null],[3,"EventLoopHandle","web3::transports","Event Loop Handle. NOTE: Event loop is stopped when handle is dropped!",null,null],[0,"batch","","Batching Transport",null,null],[3,"Batch","web3::transports::batch","Transport allowing to batch queries together.",null,null],[3,"BatchFuture","","A result of submitting a batch request. Returns the results of all requests within the batch.",null,null],[3,"SingleResult","","Result of calling a single method that will be part of the batch. Converts `oneshot::Receiver` error into `RpcError::Internal`",null,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"batch"}}],[11,"new","","Creates new Batch transport given existing transport supporing batch requests.",27,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"submit_batch","","Sends all requests as a batch.",27,{"inputs":[{"name":"self"}],"output":{"name":"batchfuture"}}],[11,"prepare","","",27,null],[11,"send","","",27,null],[11,"poll","","",28,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",29,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"http","web3::transports","HTTP Transport",null,null],[3,"Http","web3::transports::http","HTTP Transport (synchronous)",null,null],[6,"FetchTask","","A future representing pending HTTP request, resolves to a response.",null,null],[11,"from","web3::error","",24,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",24,{"inputs":[{"name":"urierror"}],"output":{"name":"self"}}],[11,"fmt","web3::transports::http","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"http"}}],[11,"new","","Create new HTTP transport with given URL and spawn an event loop in a separate thread. NOTE: Dropping event loop handle will stop the transport layer!",30,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"with_max_parallel","","Create new HTTP transport with given URL and spawn an event loop in a separate thread. You can set a maximal number of parallel requests using the second parameter. NOTE: Dropping event loop handle will stop the transport layer!",30,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"result"}}],[11,"with_event_loop","","Create new HTTP transport with given URL and existing event loop handle.",30,{"inputs":[{"name":"str"},{"name":"handle"},{"name":"usize"}],"output":{"name":"result"}}],[11,"prepare","","",30,null],[11,"send","","",30,null],[11,"send_batch","","",30,null],[0,"ipc","web3::transports","IPC Transport for *nix",null,null],[3,"Ipc","web3::transports::ipc","Unix Domain Sockets (IPC) transport",null,null],[6,"IpcTask","","A future representing pending IPC request, resolves to a response.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"ipc"}}],[11,"new","","Create new IPC transport with separate event loop. NOTE: Dropping event loop handle will stop the transport layer!",31,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"with_event_loop","","Create new IPC transport within existing Event Loop.",31,{"inputs":[{"name":"p"},{"name":"handle"}],"output":{"name":"result"}}],[11,"prepare","","",31,null],[11,"send","","",31,null],[11,"send_batch","","",31,null],[11,"spawn","web3::transports","Creates a new `EventLoopHandle` and transport given the transport initializer.",32,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[11,"remote","","Returns event loop remote.",32,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"drop","","",32,{"inputs":[{"name":"self"}],"output":null}],[6,"Result","","RPC Result.",null,null],[0,"types","web3","Web3 Types",null,null],[3,"Block","web3::types","The block type returned from RPC calls. This is generic over a `TX` type.",null,null],[12,"hash","","Hash of the block",33,null],[12,"parent_hash","","Hash of the parent",33,null],[12,"uncles_hash","","Hash of the uncles",33,null],[12,"author","","Miner/author's address.",33,null],[12,"state_root","","State root hash",33,null],[12,"transactions_root","","Transactions root hash",33,null],[12,"receipts_root","","Transactions receipts root hash",33,null],[12,"number","","Block number. None if pending.",33,null],[12,"gas_used","","Gas Used",33,null],[12,"gas_limit","","Gas Limit",33,null],[12,"extra_data","","Extra data",33,null],[12,"logs_bloom","","Logs bloom",33,null],[12,"timestamp","","Timestamp",33,null],[12,"difficulty","","Difficulty",33,null],[12,"total_difficulty","","Total difficulty",33,null],[12,"seal_fields","","Seal fields",33,null],[12,"uncles","","Uncles' hashes",33,null],[12,"transactions","","Transactions",33,null],[12,"size","","Size in bytes",33,null],[3,"Bytes","","Raw bytes wrapper",null,null],[12,"0","","",34,null],[3,"Log","","A log produced by a transaction.",null,null],[12,"address","","H160",35,null],[12,"topics","","Topics",35,null],[12,"data","","Data",35,null],[12,"block_hash","","Block Hash",35,null],[12,"block_number","","Block Number",35,null],[12,"transaction_hash","","Transaction Hash",35,null],[12,"transaction_index","","Transaction Index",35,null],[12,"log_index","","Log Index in Block",35,null],[12,"transaction_log_index","","Log Index in Transaction",35,null],[12,"log_type","","Log Type",35,null],[3,"Filter","","Filter",null,null],[3,"FilterBuilder","","Filter Builder",null,null],[3,"Transaction","","Description of a Transaction, pending or in the chain.",null,null],[12,"hash","","Hash",36,null],[12,"nonce","","Nonce",36,null],[12,"block_hash","","Block hash. None when pending.",36,null],[12,"block_number","","Block number. None when pending.",36,null],[12,"transaction_index","","Transaction Index. None when pending.",36,null],[12,"from","","Sender",36,null],[12,"to","","Recipient (None when contract creation)",36,null],[12,"value","","Transfered value",36,null],[12,"gas_price","","Gas Price",36,null],[12,"gas","","Gas amount",36,null],[12,"input","","Input data",36,null],[3,"TransactionReceipt","","\"Receipt\" of an executed transaction: details of its execution.",null,null],[12,"transaction_hash","","Transaction hash.",37,null],[12,"transaction_index","","Index within the block.",37,null],[12,"block_hash","","Hash of the block this transaction was included within.",37,null],[12,"block_number","","Number of the block this transaction was included within.",37,null],[12,"cumulative_gas_used","","Cumulative gas used within the block after this was executed.",37,null],[12,"gas_used","","Gas used by this transaction alone.",37,null],[12,"contract_address","","Contract address created, or `None` if not a deployment.",37,null],[12,"logs","","Logs generated within this transaction.",37,null],[3,"TransactionRequest","","Send Transaction Parameters",null,null],[12,"from","","Sender address",38,null],[12,"to","","Recipient address (None for contract creation)",38,null],[12,"gas","","Supplied gas (None for sensible default)",38,null],[12,"gas_price","","Gas price (None for sensible default)",38,null],[12,"value","","Transfered value (None for no transfer)",38,null],[12,"data","","Transaction data (None for empty bytes)",38,null],[12,"nonce","","Transaction nonce (None for next available nonce)",38,null],[12,"condition","","Min block inclusion (None for include immediately)",38,null],[3,"CallRequest","","Call contract request (eth_call / eth_estimateGas)",null,null],[12,"from","","Sender address (None for arbitrary address)",39,null],[12,"to","","To address",39,null],[12,"gas","","Supplied gas (None for sensible default)",39,null],[12,"gas_price","","Gas price (None for sensible default)",39,null],[12,"value","","Transfered value (None for no transfer)",39,null],[12,"data","","Data (None for empty data)",39,null],[3,"H64","","Uint serialization.",null,null],[12,"0","","",40,null],[3,"H128","","Uint serialization.",null,null],[12,"0","","",41,null],[3,"H160","","Uint serialization.",null,null],[12,"0","","",42,null],[3,"H256","","Uint serialization.",null,null],[12,"0","","",43,null],[3,"H512","","Uint serialization.",null,null],[12,"0","","",44,null],[3,"H520","","Uint serialization.",null,null],[12,"0","","",45,null],[3,"H2048","","Uint serialization.",null,null],[12,"0","","",46,null],[3,"U64","","Uint serialization.",null,null],[12,"0","","",47,null],[3,"U256","","Uint serialization.",null,null],[12,"0","","",48,null],[3,"Work","","Miner's work package",null,null],[12,"pow_hash","","The proof-of-work hash.",49,null],[12,"seed_hash","","The seed hash.",49,null],[12,"target","","The target.",49,null],[12,"number","","The block number: this isn't always stored.",49,null],[4,"BlockId","","Block Identifier",null,null],[13,"Hash","","By Hash",50,null],[13,"Number","","By Number",50,null],[4,"BlockNumber","","Block Number",null,null],[13,"Latest","","Latest block",51,null],[13,"Earliest","","Earliest block (genesis)",51,null],[13,"Pending","","Pending block (not yet part of the blockchain)",51,null],[13,"Number","","Block by number from canon chain",51,null],[4,"TransactionId","","Transaction Identifier",null,null],[13,"Hash","","By hash",52,null],[13,"Block","","By block and index",52,null],[4,"TransactionCondition","","Represents condition on minimum block number or block timestamp.",null,null],[13,"Block","","Valid at this minimum block number.",53,null],[13,"Timestamp","","Valid at given unix time.",53,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"block"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"block"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"blocknumber"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"blocknumber"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"blocknumber"}],"output":{"name":"bool"}}],[11,"from","","",51,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"serialize","","",51,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"blockid"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"blockid"}],"output":{"name":"bool"}}],[11,"serialize","","",50,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"from","","",50,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",50,{"inputs":[{"name":"blocknumber"}],"output":{"name":"self"}}],[11,"from","","",50,{"inputs":[{"name":"h256"}],"output":{"name":"self"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",34,{"inputs":[],"output":{"name":"bytes"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":{"name":"bool"}}],[11,"from","","",34,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"serialize","","",34,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",34,{"inputs":[{"name":"d"}],"output":{"generics":["bytes"],"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"log"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"log"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"log"}],"output":{"name":"bool"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"filter"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"filterbuilder"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"filterbuilder"}}],[11,"from_block","","Sets from block",55,{"inputs":[{"name":"self"},{"name":"blocknumber"}],"output":{"name":"self"}}],[11,"to_block","","Sets to block",55,{"inputs":[{"name":"self"},{"name":"blocknumber"}],"output":{"name":"self"}}],[11,"address","","Single address",55,{"inputs":[{"name":"self"},{"generics":["h160"],"name":"vec"}],"output":{"name":"self"}}],[11,"topics","","Topics",55,{"inputs":[{"name":"self"},{"generics":["vec"],"name":"option"},{"generics":["vec"],"name":"option"},{"generics":["vec"],"name":"option"},{"generics":["vec"],"name":"option"}],"output":{"name":"self"}}],[11,"limit","","Limit the result",55,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"build","","Returns filter",55,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"transaction"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"transaction"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"transaction"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"transaction"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"receipt"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"receipt"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"receipt"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"receipt"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"transactionid"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"transactionid"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"transactionid"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"callrequest"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"callrequest"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"callrequest"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"transactionrequest"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"transactionrequest"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"transactionrequest"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"transactioncondition"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"transactioncondition"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"transactioncondition"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"deref","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"bool"}}],[11,"cmp","","",47,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",47,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",47,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",47,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",47,null],[11,"from_str","","",47,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",47,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",47,{"inputs":[{"name":"d"}],"output":{"generics":["u64"],"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"u256"}],"output":{"name":"bool"}}],[11,"cmp","","",48,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",48,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",48,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",48,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",48,null],[11,"from_str","","",48,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",48,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",48,{"inputs":[{"name":"d"}],"output":{"generics":["u256"],"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",40,null],[11,"default","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"h64"}],"output":{"name":"bool"}}],[11,"cmp","","",40,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",40,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",40,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",40,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",40,null],[11,"from_str","","",40,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",40,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",40,{"inputs":[{"name":"d"}],"output":{"generics":["h64"],"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"h128"}],"output":{"name":"bool"}}],[11,"cmp","","",41,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",41,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",41,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",41,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",41,null],[11,"from_str","","",41,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",41,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",41,{"inputs":[{"name":"d"}],"output":{"generics":["h128"],"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",42,null],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"h160"}],"output":{"name":"bool"}}],[11,"cmp","","",42,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",42,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",42,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",42,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",42,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",42,null],[11,"from_str","","",42,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",42,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",42,{"inputs":[{"name":"d"}],"output":{"generics":["h160"],"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"h256"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",43,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",43,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",43,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",43,null],[11,"from_str","","",43,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",43,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",43,{"inputs":[{"name":"d"}],"output":{"generics":["h256"],"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"h512"}],"output":{"name":"bool"}}],[11,"cmp","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",44,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",44,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",44,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",44,null],[11,"from_str","","",44,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",44,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",44,{"inputs":[{"name":"d"}],"output":{"generics":["h512"],"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",45,null],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"h520"}],"output":{"name":"bool"}}],[11,"cmp","","",45,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",45,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",45,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",45,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",45,null],[11,"from_str","","",45,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",45,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",45,{"inputs":[{"name":"d"}],"output":{"generics":["h520"],"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"h2048"}],"output":{"name":"bool"}}],[11,"cmp","","",46,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"hash","","",46,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",46,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"low_u64","","Returns value created from lowest 8 bytes",46,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"from","","",46,null],[11,"from_str","","",46,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"serialize","","",46,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"deserialize","","",46,{"inputs":[{"name":"d"}],"output":{"generics":["h2048"],"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"work"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"work"}],"output":{"name":"bool"}}],[11,"deserialize","","",49,{"inputs":[{"name":"d"}],"output":{"generics":["work"],"name":"result"}}],[11,"serialize","","",49,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[6,"Address","","Address",null,null],[6,"Index","","Index in block",null,null],[0,"confirm","web3","Easy to use utilities for confirmations.",null,null],[3,"Confirmations","web3::confirm","On each new block checks confirmations.",null,null],[3,"SendTransactionWithConfirmation","","Sends transaction and then checks if has been confirmed.",null,null],[5,"wait_for_confirmations","","Should be used to wait for confirmations",null,{"inputs":[{"name":"eth"},{"name":"ethfilter"},{"name":"duration"},{"name":"usize"},{"name":"v"}],"output":{"name":"confirmations"}}],[5,"send_transaction_with_confirmation","","Sends transaction and returns future resolved after transaction is confirmed",null,{"inputs":[{"name":"t"},{"name":"transactionrequest"},{"name":"duration"},{"name":"usize"}],"output":{"name":"sendtransactionwithconfirmation"}}],[5,"send_raw_transaction_with_confirmation","","Sends raw transaction and returns future resolved after transaction is confirmed",null,{"inputs":[{"name":"t"},{"name":"bytes"},{"name":"duration"},{"name":"usize"}],"output":{"name":"sendtransactionwithconfirmation"}}],[8,"ConfirmationCheck","","Checks whether an event has been confirmed.",null,null],[16,"Check","","Future resolved when is known whether an event has been confirmed.",56,null],[10,"check","","Should be called to get future which resolves when confirmation state is known.",56,null],[11,"poll","","",57,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",58,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[6,"Result","web3","RPC result",null,null],[6,"RequestId","","Assigned RequestId",null,null],[8,"Transport","","Transport implementation",null,null],[16,"Out","","The type of future this transport returns when a call is made.",59,null],[10,"prepare","","Prepare serializable RPC call for given method with parameters.",59,null],[10,"send","","Execute prepared RPC call.",59,null],[11,"execute","","Execute remote method with given parameters.",59,null],[8,"BatchTransport","","A transport implementation supporting batch requests.",null,null],[16,"Batch","","The type of future this transport returns when a call is made.",60,null],[10,"send_batch","","Sends a batch of prepared RPC calls.",60,null],[11,"fmt","web3::contract::deploy","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",16,{"inputs":[{"name":"errorkind"},{"name":"state"}],"output":{"name":"error"}}],[11,"from_kind","","",16,null],[11,"with_chain","","",16,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"self"}}],[11,"kind","","",16,null],[11,"iter","","",16,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"chain_err","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[11,"backtrace","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"extract_backtrace","","",16,{"inputs":[{"name":"error"}],"output":{"generics":["arc"],"name":"option"}}],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",16,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"with_chain","","Constructs a chained error from another error and a kind, and generates a backtrace.",16,{"inputs":[{"name":"e"},{"name":"k"}],"output":{"name":"error"}}],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a kind, and generates a backtrace",16,{"inputs":[{"generics":["error"],"name":"box"},{"name":"k"}],"output":{"name":"error"}}],[11,"kind","","Returns the kind of the error.",16,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"iter","","Iterates over the error chain.",16,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"backtrace","","Returns the backtrace associated with this error.",16,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"chain_err","","Extends the error chain with a new entry.",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"error"}}],[11,"description","","",16,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",16,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",16,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",16,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",16,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"deref","","",16,null],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","A string describing the error kind.",17,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",17,{"inputs":[{"name":"errorkind"}],"output":{"name":"self"}}],[11,"from","","",17,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",17,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",17,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from_token","web3::types","",43,{"inputs":[{"name":"token"}],"output":{"generics":["error"],"name":"result"}}],[11,"into_token","","",43,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"from_token","","",61,{"inputs":[{"name":"token"}],"output":{"generics":["error"],"name":"result"}}],[11,"into_token","","",61,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"from_token","","",48,{"inputs":[{"name":"token"}],"output":{"generics":["error"],"name":"result"}}],[11,"into_token","","",48,{"inputs":[{"name":"self"}],"output":{"name":"token"}}],[11,"from_token","","",47,{"inputs":[{"name":"token"}],"output":{"generics":["error"],"name":"result"}}],[11,"into_token","","",47,{"inputs":[{"name":"self"}],"output":{"name":"token"}}]],"paths":[[3,"CallResult"],[3,"Eth"],[3,"FilterStream"],[3,"BaseFilter"],[3,"CreateFilter"],[3,"EthFilter"],[3,"Net"],[3,"Personal"],[3,"Web3Api"],[8,"Namespace"],[3,"Web3"],[3,"Error"],[3,"Options"],[4,"ErrorKind"],[3,"CallResult"],[3,"QueryResult"],[3,"Error"],[4,"ErrorKind"],[3,"Builder"],[3,"PendingContract"],[8,"Detokenize"],[8,"Tokenize"],[8,"Tokenizable"],[3,"Contract"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"Batch"],[3,"BatchFuture"],[3,"SingleResult"],[3,"Http"],[3,"Ipc"],[3,"EventLoopHandle"],[3,"Block"],[3,"Bytes"],[3,"Log"],[3,"Transaction"],[3,"TransactionReceipt"],[3,"TransactionRequest"],[3,"CallRequest"],[3,"H64"],[3,"H128"],[3,"H160"],[3,"H256"],[3,"H512"],[3,"H520"],[3,"H2048"],[3,"U64"],[3,"U256"],[3,"Work"],[4,"BlockId"],[4,"BlockNumber"],[4,"TransactionId"],[4,"TransactionCondition"],[3,"Filter"],[3,"FilterBuilder"],[8,"ConfirmationCheck"],[3,"Confirmations"],[3,"SendTransactionWithConfirmation"],[8,"Transport"],[8,"BatchTransport"],[6,"Address"]]};
initSearch(searchIndex);
